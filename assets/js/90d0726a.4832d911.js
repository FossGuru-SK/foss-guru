"use strict";(self.webpackChunkfoss_guru=self.webpackChunkfoss_guru||[]).push([[3296],{9849:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"kits/java/Flow Control Statements/continue","title":"Java continue statement","description":"Java Language continue statement","source":"@site/community/kits/java/Flow Control Statements/continue.md","sourceDirName":"kits/java/Flow Control Statements","slug":"/kits/java/Flow Control Statements/continue","permalink":"/foss-guru/community/kits/java/Flow Control Statements/continue","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"id":"continue","title":"Java continue statement","description":"Java Language continue statement","sidebar_position":9},"sidebar":"community","previous":{"title":"Java break statement","permalink":"/foss-guru/community/kits/java/Flow Control Statements/break"},"next":{"title":"Java Labeled Break and Continue Statements","permalink":"/foss-guru/community/kits/java/Flow Control Statements/lable"}}');var s=t(4848),o=t(8453);const r={id:"continue",title:"Java continue statement",description:"Java Language continue statement",sidebar_position:9},c=void 0,a={},l=[{value:"\ud83d\ude80 Java <code>continue</code> Statement: The Art of Skipping! \ud83c\udfad",id:"-java-continue-statement-the-art-of-skipping-",level:2},{value:"\ud83c\udfaf What&#39;s the Deal with <code>continue</code>?",id:"-whats-the-deal-with-continue",level:3},{value:"\ud83e\udd14 How Does It Work?",id:"-how-does-it-work",level:3},{value:"\ud83d\udd25 Syntax of <code>continue</code>",id:"-syntax-of-continue",level:2},{value:"\ud83c\udfad Types of <code>continue</code> Statements",id:"-types-of-continue-statements",level:2},{value:"\ud83c\udf69 1. Unlabeled <code>continue</code>",id:"-1-unlabeled-continue",level:3},{value:"\ud83c\udfaf 2. Labeled <code>continue</code>",id:"-2-labeled-continue",level:3},{value:"\ud83c\udfac <code>continue</code> in Action: A Real-Life Example",id:"-continue-in-action-a-real-life-example",level:2},{value:"\u26a0\ufe0f A Word of Caution",id:"\ufe0f-a-word-of-caution",level:2},{value:"\ud83c\udf89 Conclusion",id:"-conclusion",level:2}];function d(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Banner java icon",src:t(4769).A+"",width:"370",height:"364"})}),"\n",(0,s.jsxs)(n.h2,{id:"-java-continue-statement-the-art-of-skipping-",children:["\ud83d\ude80 Java ",(0,s.jsx)(n.code,{children:"continue"})," Statement: The Art of Skipping! \ud83c\udfad"]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"continue"})," statement in Java is like that one friend who skips all the boring parts of a conversation and jumps straight to the good stuff. \ud83d\ude06 It helps us skip the current iteration of a loop and move on to the next one\u2014no hard feelings!"]}),"\n",(0,s.jsxs)(n.h3,{id:"-whats-the-deal-with-continue",children:["\ud83c\udfaf What's the Deal with ",(0,s.jsx)(n.code,{children:"continue"}),"?"]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"continue"})," statement works inside ",(0,s.jsx)(n.strong,{children:"for"}),", ",(0,s.jsx)(n.strong,{children:"while"}),", or ",(0,s.jsx)(n.strong,{children:"do-while"})," loops and behaves almost like ",(0,s.jsx)(n.code,{children:"break"}),", except it doesn\u2019t rudely terminate the loop\u2014it just skips the current iteration and moves to the next."]}),"\n",(0,s.jsx)(n.h3,{id:"-how-does-it-work",children:"\ud83e\udd14 How Does It Work?"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["In a ",(0,s.jsx)(n.strong,{children:"for loop"}),", ",(0,s.jsx)(n.code,{children:"continue"})," jumps directly to the increment/decrement part."]}),"\n",(0,s.jsxs)(n.li,{children:["In a ",(0,s.jsx)(n.strong,{children:"while"})," or ",(0,s.jsx)(n.strong,{children:"do-while"})," loop, ",(0,s.jsx)(n.code,{children:"continue"})," sends control straight to the condition check."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Let\u2019s see ",(0,s.jsx)(n.code,{children:"continue"})," in action:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'int n = 10;\nfor (int i = 0; i < n; i++) {\n    if (i % 2 != 0) { // Skip odd numbers\n        continue;\n    }\n    System.out.print(i + " ");\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["\ud83d\udd39 ",(0,s.jsx)(n.strong,{children:"Output:"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"0 2 4 6 8\n"})}),"\n",(0,s.jsxs)(n.p,{children:["See? All the odd numbers just vanished! Magic? Nope. Just ",(0,s.jsx)(n.code,{children:"continue"})," doing its thing. \ud83e\ude84"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"-syntax-of-continue",children:["\ud83d\udd25 Syntax of ",(0,s.jsx)(n.code,{children:"continue"})]}),"\n",(0,s.jsx)(n.p,{children:"The syntax is as simple as skipping leg day at the gym. \ud83d\udcaa"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"while (testExpression) {\n  // Some statements\n  if (continue-condition)\n    continue;\n  // More statements (skipped if continue is hit)\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["When the ",(0,s.jsx)(n.code,{children:"continue-condition"})," is met, Java skips the remaining code inside the loop and jumps straight to the next iteration."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"-types-of-continue-statements",children:["\ud83c\udfad Types of ",(0,s.jsx)(n.code,{children:"continue"})," Statements"]}),"\n",(0,s.jsxs)(n.p,{children:["Java offers ",(0,s.jsx)(n.strong,{children:"two flavors"})," of ",(0,s.jsx)(n.code,{children:"continue"})," statements:"]}),"\n",(0,s.jsxs)(n.h3,{id:"-1-unlabeled-continue",children:["\ud83c\udf69 1. Unlabeled ",(0,s.jsx)(n.code,{children:"continue"})]}),"\n",(0,s.jsxs)(n.p,{children:["This is the basic form of ",(0,s.jsx)(n.code,{children:"continue"}),". It simply skips the current iteration of the loop it\u2019s in."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'for (int i = 0; i < 10; i++) {\n    if (i % 2 == 0) {\n        continue; // Skip even numbers\n    }\n    System.out.println("Odd number: " + i);\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["\ud83d\udd39 ",(0,s.jsx)(n.strong,{children:"Output:"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"Odd number: 1\nOdd number: 3\nOdd number: 5\nOdd number: 7\nOdd number: 9\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"-2-labeled-continue",children:["\ud83c\udfaf 2. Labeled ",(0,s.jsx)(n.code,{children:"continue"})]}),"\n",(0,s.jsxs)(n.p,{children:["Sometimes, you need more control. Labeled ",(0,s.jsx)(n.code,{children:"continue"})," lets you skip an iteration in an ",(0,s.jsx)(n.strong,{children:"outer loop"})," instead of just the current one. Think of it as a VIP pass to the next level. \ud83c\udf9f\ufe0f"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'outer:\nfor (int i = 0; i < 3; i++) {\n    for (int j = 0; j < 3; j++) {\n        if (j == 1) {\n            continue outer; // Skip to the next iteration of outer loop\n        }\n        System.out.println("i = " + i + ", j = " + j);\n    }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["\ud83d\udd39 ",(0,s.jsx)(n.strong,{children:"Output:"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"i = 0, j = 0\ni = 1, j = 0\ni = 2, j = 0\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Whenever ",(0,s.jsx)(n.code,{children:"j == 1"}),", it skips the rest of the inner loop and moves to the next iteration of the outer loop. Pretty neat, right? \ud83d\ude0e"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.h2,{id:"-continue-in-action-a-real-life-example",children:["\ud83c\udfac ",(0,s.jsx)(n.code,{children:"continue"})," in Action: A Real-Life Example"]}),"\n",(0,s.jsxs)(n.p,{children:["Let\u2019s use ",(0,s.jsx)(n.code,{children:"continue"})," to print only odd numbers from 0 to 9:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'for (int i = 0; i < 10; i++) {\n    if (i % 2 == 0) {\n        continue; // Skip even numbers\n    }\n    System.out.println("The number is " + i);\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["\ud83d\udd39 ",(0,s.jsx)(n.strong,{children:"Output:"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"The number is 1\nThe number is 3\nThe number is 5\nThe number is 7\nThe number is 9\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Now, what if we ",(0,s.jsx)(n.em,{children:"don\u2019t"})," use ",(0,s.jsx)(n.code,{children:"continue"}),"? We can achieve the same result with an ",(0,s.jsx)(n.code,{children:"if"})," statement:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'for (int i = 0; i < 10; i++) {\n    if (i % 2 != 0) {\n        System.out.println("The number is " + i);\n    }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The result is the same, but hey\u2014sometimes ",(0,s.jsx)(n.code,{children:"continue"})," just makes things more fun! \ud83c\udfa2"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"\ufe0f-a-word-of-caution",children:"\u26a0\ufe0f A Word of Caution"}),"\n",(0,s.jsxs)(n.p,{children:["While ",(0,s.jsx)(n.code,{children:"continue"})," is super useful, don\u2019t overuse it! Too many ",(0,s.jsx)(n.code,{children:"continue"})," and ",(0,s.jsx)(n.code,{children:"break"})," statements can make your code hard to read. Sometimes, a simple ",(0,s.jsx)(n.code,{children:"if"})," statement does the job just as well."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-conclusion",children:"\ud83c\udf89 Conclusion"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"continue"}),' statement is like a "skip this one" button for loops. It\u2019s useful when you need to avoid certain iterations without stopping the entire loop. \ud83d\ude80']}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsxs)(n.strong,{children:["unlabeled ",(0,s.jsx)(n.code,{children:"continue"})]})," to skip the current iteration."]}),"\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsxs)(n.strong,{children:["labeled ",(0,s.jsx)(n.code,{children:"continue"})]})," when working with nested loops."]}),"\n",(0,s.jsx)(n.li,{children:"Don\u2019t abuse it\u2014clean code is happy code! \ud83d\ude03"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"That\u2019s all, folks! Keep coding and keep skipping the boring parts!"})," \ud83c\udf88"]}),"\n",(0,s.jsx)(n.p,{children:"Happy Learning! \ud83d\ude80\ud83d\ude03"})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},4769:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/banner-java-icon-0ae50e2293ff72244732cfbb42e27ed7.png"},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var i=t(6540);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);