"use strict";(self.webpackChunkfoss_guru=self.webpackChunkfoss_guru||[]).push([[6813],{4270:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"kits/java/Misc Topics/java-versions-features/java-8/lambda-expression","title":"Lambda Expressions in Java","description":"Lambda expressions are known to many of us who have worked on advanced languages like Scala. The term \u201clambda\u201d has its origin in Lambda calculus that uses the Greek letter lambda (\u03bb) to denote a function abstraction. Lambda expressions were introduced to Java as part of Java 8 release. 1","source":"@site/community/kits/java/Misc Topics/java-versions-features/java-8/lambda-expression.md","sourceDirName":"kits/java/Misc Topics/java-versions-features/java-8","slug":"/kits/java/Misc Topics/java-versions-features/java-8/lambda-expression","permalink":"/foss-guru/community/kits/java/Misc Topics/java-versions-features/java-8/lambda-expression","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"lambda-expression","title":"Lambda Expressions in Java","description":"Lambda expressions are known to many of us who have worked on advanced languages like Scala. The term \u201clambda\u201d has its origin in Lambda calculus that uses the Greek letter lambda (\u03bb) to denote a function abstraction. Lambda expressions were introduced to Java as part of Java 8 release. 1","sidebar_position":2},"sidebar":"community","previous":{"title":"Java 8 Features Intro","permalink":"/foss-guru/community/kits/java/Misc Topics/java-versions-features/java-8/introduction"},"next":{"title":"Java Stream API","permalink":"/foss-guru/community/kits/java/Misc Topics/java-versions-features/java-8/stream-api"}}');var r=n(4848),t=n(8453);const i={id:"lambda-expression",title:"Lambda Expressions in Java",description:"Lambda expressions are known to many of us who have worked on advanced languages like Scala. The term \u201clambda\u201d has its origin in Lambda calculus that uses the Greek letter lambda (\u03bb) to denote a function abstraction. Lambda expressions were introduced to Java as part of Java 8 release. 1",sidebar_position:2},o=void 0,l={},d=[{value:"\ud83c\udfad The Funny Side of Java Lambda Expressions",id:"-the-funny-side-of-java-lambda-expressions",level:2},{value:"\ud83c\udfd7\ufe0f What are Lambda Expressions?",id:"\ufe0f-what-are-lambda-expressions",level:2},{value:"\ud83d\udd25 Lambda Expression Example",id:"-lambda-expression-example",level:2},{value:"\ud83d\udca1 Meet Our Functional Interface: Operator",id:"-meet-our-functional-interface-operator",level:3},{value:"\ud83c\udfaf Features of Lambda Expressions",id:"-features-of-lambda-expressions",level:2},{value:"\ud83d\udee0\ufe0f More Fun with Lambdas",id:"\ufe0f-more-fun-with-lambdas",level:2},{value:"Example 1: Looping Through a List Like a Boss \ud83c\udfc6",id:"example-1-looping-through-a-list-like-a-boss-",level:3},{value:"Example 2: Creating a Thread in Style \ud83d\ude80",id:"example-2-creating-a-thread-in-style-",level:3},{value:"Example 3: Click That Button! \ud83d\uddb1\ufe0f",id:"example-3-click-that-button-\ufe0f",level:3},{value:"\ud83c\udf81 Why Should You Care About Lambda Expressions?",id:"-why-should-you-care-about-lambda-expressions",level:2},{value:"\ud83c\udf89 Conclusion",id:"-conclusion",level:2}];function c(e){const a={code:"code",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.p,{children:(0,r.jsx)(a.img,{alt:"Banner java icon",src:n(4769).A+"",width:"370",height:"364"})}),"\n",(0,r.jsx)(a.h2,{id:"-the-funny-side-of-java-lambda-expressions",children:"\ud83c\udfad The Funny Side of Java Lambda Expressions"}),"\n",(0,r.jsx)(a.p,{children:"Lambda expressions sound like something straight out of a sci-fi movie, but don\u2019t worry, they won\u2019t take over the world... yet! If you\u2019ve dabbled in languages like Scala, you might already know about them. But did you know that the term \u201clambda\u201d comes from Lambda Calculus? Yep, it\u2019s a fancy math thing that uses the Greek letter lambda (\u03bb) to represent function abstraction. \ud83d\ude80"}),"\n",(0,r.jsx)(a.h2,{id:"\ufe0f-what-are-lambda-expressions",children:"\ud83c\udfd7\ufe0f What are Lambda Expressions?"}),"\n",(0,r.jsx)(a.p,{children:"Imagine a function that doesn\u2019t need a name, doesn\u2019t ask for attention, and just gets the job done like a coding ninja. That\u2019s a lambda expression for you! \ud83d\udca8"}),"\n",(0,r.jsxs)(a.p,{children:["In Java, a lambda expression is essentially an instance of a ",(0,r.jsx)(a.strong,{children:"functional interface"}),". Java loves rules, so even lambdas follow a strict structure:"]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:"(parameters) -> expression\n"})}),"\n",(0,r.jsx)(a.p,{children:"Unlike traditional Java methods, lambdas don\u2019t go around saying, \u201cHey, I belong to this class!\u201d Instead, their type is inferred from the context in which they\u2019re used. In other words, Java\u2019s compiler is smart enough to figure out what you meant (most of the time). \ud83e\uddd0"}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"-lambda-expression-example",children:"\ud83d\udd25 Lambda Expression Example"}),"\n",(0,r.jsx)(a.p,{children:"Think of a lambda as a magical one-liner that saves you from writing a whole method. Let\u2019s see it in action:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:"(x, y) -> x + y\n"})}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:["If ",(0,r.jsx)(a.code,{children:"x"})," and ",(0,r.jsx)(a.code,{children:"y"})," are ",(0,r.jsx)(a.strong,{children:"integers"}),", it\u2019ll add them."]}),"\n",(0,r.jsxs)(a.li,{children:["If ",(0,r.jsx)(a.code,{children:"x"})," and ",(0,r.jsx)(a.code,{children:"y"})," are ",(0,r.jsx)(a.strong,{children:"strings"}),", it\u2019ll glue them together like best buddies."]}),"\n"]}),"\n",(0,r.jsx)(a.h3,{id:"-meet-our-functional-interface-operator",children:"\ud83d\udca1 Meet Our Functional Interface: Operator"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:"@FunctionalInterface\ninterface Operator<T> {\n  T process(T a, T b);\n}\n"})}),"\n",(0,r.jsx)(a.p,{children:"Now let\u2019s see how lambdas make life easier:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:'Operator<Integer> addOperation = (a, b) -> a + b;\nSystem.out.println(addOperation.process(3, 3));     // Prints 6\n\nOperator<String> appendOperation = (a, b) -> a + b;\nSystem.out.println(appendOperation.process("3", "3"));  // Prints 33\n\nOperator<Integer> multiplyOperation = (a, b) -> a * b;\nSystem.out.println(multiplyOperation.process(3, 3));    // Prints 9\n'})}),"\n",(0,r.jsx)(a.p,{children:"No need to create extra classes or clutter our code\u2014just pure, concise logic! \ud83c\udfaf"}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"-features-of-lambda-expressions",children:"\ud83c\udfaf Features of Lambda Expressions"}),"\n",(0,r.jsxs)(a.ol,{children:["\n",(0,r.jsxs)(a.li,{children:["\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.strong,{children:"They can have zero, one, or many parameters"})}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:'(x, y) -> x + y\n(x, y, z) -> x + y + z\n() -> System.out.println("Hello, world!")\n'})}),"\n"]}),"\n",(0,r.jsxs)(a.li,{children:["\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.strong,{children:"Body can be single or multiple statements"})}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:"(x) -> x * x;  // No curly braces needed for a single statement\n(x, y) -> { System.out.println(x + y); return x + y; }  // Multiple statements need braces\n"})}),"\n"]}),"\n",(0,r.jsxs)(a.li,{children:["\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.strong,{children:"Types can be inferred"})," (Java is finally doing more work for us! \ud83c\udf89)"]}),"\n"]}),"\n",(0,r.jsxs)(a.li,{children:["\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.strong,{children:"They can\u2019t throw checked exceptions"})," \ud83e\udd37"]}),"\n"]}),"\n",(0,r.jsxs)(a.li,{children:["\n",(0,r.jsxs)(a.p,{children:[(0,r.jsx)(a.strong,{children:"They can\u2019t be generic"})," (But they\u2019re still cool!)"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"\ufe0f-more-fun-with-lambdas",children:"\ud83d\udee0\ufe0f More Fun with Lambdas"}),"\n",(0,r.jsx)(a.h3,{id:"example-1-looping-through-a-list-like-a-boss-",children:"Example 1: Looping Through a List Like a Boss \ud83c\udfc6"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:'List<String> pointList = new ArrayList<>();\npointList.add("1");\npointList.add("2");\npointList.forEach(p -> System.out.println(p));\n'})}),"\n",(0,r.jsx)(a.h3,{id:"example-2-creating-a-thread-in-style-",children:"Example 2: Creating a Thread in Style \ud83d\ude80"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:'new Thread(() -> System.out.println("My Runnable"));\n'})}),"\n",(0,r.jsx)(a.h3,{id:"example-3-click-that-button-\ufe0f",children:"Example 3: Click That Button! \ud83d\uddb1\ufe0f"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:'JButton button = new JButton("Submit");\nbutton.addActionListener(e -> System.out.println("Click event triggered!!"));\n'})}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"-why-should-you-care-about-lambda-expressions",children:"\ud83c\udf81 Why Should You Care About Lambda Expressions?"}),"\n",(0,r.jsxs)(a.p,{children:["Lambdas bring a touch of ",(0,r.jsx)(a.strong,{children:"functional programming"})," to Java, making it:"]}),"\n",(0,r.jsxs)(a.p,{children:["\u2714 ",(0,r.jsx)(a.strong,{children:"More expressive"})," (less boilerplate, more fun!) \ud83c\udfad\n\u2714 ",(0,r.jsx)(a.strong,{children:"Concise & readable"})," (goodbye, anonymous classes!) \ud83d\udcdc\n\u2714 ",(0,r.jsx)(a.strong,{children:"Great for Stream API"})," (filtering, mapping, reducing\u2014oh my! \ud83c\udf0a)"]}),"\n",(0,r.jsx)(a.p,{children:"Let\u2019s compare:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-java",children:"// Lambda Expression\nOperator<Integer> addOperation = (a, b) -> a + b;\n\n// Old-School Anonymous Class\nOperator<Integer> addOperation = new Operator<Integer>() {\n  @Override\n  public Integer process(Integer a, Integer b) {\n    return a + b;\n  }\n};\n"})}),"\n",(0,r.jsxs)(a.p,{children:["Clearly, lambdas make Java ",(0,r.jsx)(a.strong,{children:"less verbose and more expressive"}),". \ud83c\udfb6"]}),"\n",(0,r.jsx)(a.hr,{}),"\n",(0,r.jsx)(a.h2,{id:"-conclusion",children:"\ud83c\udf89 Conclusion"}),"\n",(0,r.jsxs)(a.p,{children:["Lambdas are like that cool, minimalistic friend who makes everything easier. Java finally caught up with the modern world in ",(0,r.jsx)(a.strong,{children:"Java 8"}),", and now we can enjoy functional programming without breaking a sweat. \ud83d\ude0e"]}),"\n",(0,r.jsxs)(a.p,{children:["So go ahead, ",(0,r.jsx)(a.strong,{children:"embrace the lambda life!"})," \ud83d\ude80"]}),"\n",(0,r.jsx)(a.p,{children:"Happy Coding! \ud83c\udf88"})]})}function h(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},4769:(e,a,n)=>{n.d(a,{A:()=>s});const s=n.p+"assets/images/banner-java-icon-0ae50e2293ff72244732cfbb42e27ed7.png"},8453:(e,a,n)=>{n.d(a,{R:()=>i,x:()=>o});var s=n(6540);const r={},t=s.createContext(r);function i(e){const a=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(t.Provider,{value:a},e.children)}}}]);