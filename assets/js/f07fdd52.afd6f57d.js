"use strict";(self.webpackChunkfoss_guru=self.webpackChunkfoss_guru||[]).push([[3683],{7524:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"kits/java/Java OOP/building-blocks-of-oops/association-aggregation-composition","title":"Association, Aggregation and Composition in Java","description":"Learn the difference between association, aggregation and composition in Java with source code, examples and real-life usecases.","source":"@site/community/kits/java/Java OOP/building-blocks-of-oops/association-aggregation-composition.md","sourceDirName":"kits/java/Java OOP/building-blocks-of-oops","slug":"/kits/java/Java OOP/building-blocks-of-oops/association-aggregation-composition","permalink":"/foss-guru/community/kits/java/Java OOP/building-blocks-of-oops/association-aggregation-composition","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"association-aggregation-composition","title":"Association, Aggregation and Composition in Java","description":"Learn the difference between association, aggregation and composition in Java with source code, examples and real-life usecases.","sidebar_position":2},"sidebar":"community","previous":{"title":"Object Oriented Programming","permalink":"/foss-guru/community/kits/java/Java OOP/building-blocks-of-oops/object-oriented-programming"},"next":{"title":"Abstraction in Java","permalink":"/foss-guru/community/kits/java/Java OOP/building-blocks-of-oops/abstraction"}}');var s=i(4848),a=i(8453);const o={id:"association-aggregation-composition",title:"Association, Aggregation and Composition in Java",description:"Learn the difference between association, aggregation and composition in Java with source code, examples and real-life usecases.",sidebar_position:2},r=void 0,l={},c=[{value:"\ud83c\udfad Association, Aggregation, and Composition \u2013 The OOP Relationship Drama",id:"-association-aggregation-and-composition--the-oop-relationship-drama",level:2},{value:"1\ufe0f\u20e3 Association: The &quot;We Know Each Other&quot; Relationship \ud83c\udfeb",id:"1\ufe0f\u20e3-association-the-we-know-each-other-relationship-",level:2},{value:"Example: Teacher \ud83d\udc68\u200d\ud83c\udfeb &amp; Student \ud83e\uddd1\u200d\ud83c\udf93",id:"example-teacher---student-",level:3},{value:"2\ufe0f\u20e3 Aggregation: The &quot;I Own You, But You Can Leave&quot; Relationship \ud83d\udcf1\ud83d\udd0b",id:"2\ufe0f\u20e3-aggregation-the-i-own-you-but-you-can-leave-relationship-",level:2},{value:"Example: CellPhone \ud83d\udcf2 &amp; Battery \ud83d\udd0b",id:"example-cellphone---battery-",level:3},{value:"3\ufe0f\u20e3 Composition: The &quot;We Are Inseparable&quot; Relationship \u2753\u27a1\ufe0f\ud83d\udcdd",id:"3\ufe0f\u20e3-composition-the-we-are-inseparable-relationship-\ufe0f",level:2},{value:"Example: Question \u2753 &amp; Answer \u2705",id:"example-question---answer-",level:3},{value:"\ud83c\udfaf Conclusion: What\u2019s the Difference? \ud83e\udd14",id:"-conclusion-whats-the-difference-",level:2}];function h(e){const n={code:"code",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Banner java icon",src:i(4769).A+"",width:"370",height:"364"})}),"\n",(0,s.jsx)(n.h2,{id:"-association-aggregation-and-composition--the-oop-relationship-drama",children:"\ud83c\udfad Association, Aggregation, and Composition \u2013 The OOP Relationship Drama"}),"\n",(0,s.jsx)(n.p,{children:"In the world of object-oriented programming (OOP), classes don\u2019t just sit around doing nothing\u2014they form relationships! These relationships can be as casual as acquaintances, as exclusive as BFFs, or as clingy as conjoined twins. And that\u2019s exactly what Association, Aggregation, and Composition are all about! \ud83c\udfac"}),"\n",(0,s.jsx)(n.p,{children:"Just like in real life, some relationships are chill, some are a bit possessive, and others are totally codependent. Let\u2019s dive into this hilarious relationship drama! \ud83e\udd13"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Association",src:i(2707).A+"",width:"720",height:"405"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"1\ufe0f\u20e3-association-the-we-know-each-other-relationship-",children:'1\ufe0f\u20e3 Association: The "We Know Each Other" Relationship \ud83c\udfeb'}),"\n",(0,s.jsx)(n.p,{children:"Association is the most flexible type of relationship. It\u2019s like two people who work in the same office but don\u2019t owe each other anything. They exist independently but interact when needed. No unnecessary drama! \ud83e\udd1d"}),"\n",(0,s.jsx)(n.h3,{id:"example-teacher---student-",children:"Example: Teacher \ud83d\udc68\u200d\ud83c\udfeb & Student \ud83e\uddd1\u200d\ud83c\udf93"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"A student can have multiple teachers."}),"\n",(0,s.jsx)(n.li,{children:"A teacher can teach multiple students."}),"\n",(0,s.jsx)(n.li,{children:"But if one leaves, the other continues to exist. No heartbreaks here! \ud83d\udc94"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"class Teacher {\n  List<Student> students;\n  \n  public void teach() {\n    // Teach stuff \ud83c\udf93\n  }\n}\n\nclass Student {\n  List<Teacher> teachers;\n  \n  public void learn() {\n    // Learn stuff \ud83d\udcda\n  }\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"\ud83d\udd39 Association can take different forms:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"One-to-One"}),"\n",(0,s.jsx)(n.li,{children:"One-to-Many"}),"\n",(0,s.jsx)(n.li,{children:"Many-to-One"}),"\n",(0,s.jsx)(n.li,{children:"Many-to-Many"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This means that just like in school, a student can have multiple teachers, and a teacher can have multiple students, but they don\u2019t own each other. No attachments! \ud83d\ude06"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"2\ufe0f\u20e3-aggregation-the-i-own-you-but-you-can-leave-relationship-",children:'2\ufe0f\u20e3 Aggregation: The "I Own You, But You Can Leave" Relationship \ud83d\udcf1\ud83d\udd0b'}),"\n",(0,s.jsx)(n.p,{children:"Aggregation is like a phone and its battery. The phone has a battery, but if the phone gets destroyed (RIP \ud83d\udcf1), the battery can still be used elsewhere!"}),"\n",(0,s.jsx)(n.h3,{id:"example-cellphone---battery-",children:"Example: CellPhone \ud83d\udcf2 & Battery \ud83d\udd0b"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"A battery can belong to only one phone at a time."}),"\n",(0,s.jsx)(n.li,{children:"If the phone dies, the battery can be used in another phone."}),"\n",(0,s.jsx)(n.li,{children:"The phone and battery have independent lifecycles, but there is some level of ownership."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"class CellPhone {\n  CellBattery battery;\n  \n  public void ring() {\n    // Riiiiing \ud83d\udcde\n  }\n}\n\nclass CellBattery {\n  short remainingEnergy;\n  \n  public void charge() {\n    // Charging...\u26a1\n  }\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"\ud83d\udd0b If we need to check the battery percentage, we must first access the phone:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"short remainingEnergy = phone.getBattery().getRemainingEnergy();\n"})}),"\n",(0,s.jsx)(n.p,{children:"So while the battery belongs to the phone, it doesn\u2019t have to die with it. A practical relationship! \ud83d\ude0e"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"3\ufe0f\u20e3-composition-the-we-are-inseparable-relationship-\ufe0f",children:'3\ufe0f\u20e3 Composition: The "We Are Inseparable" Relationship \u2753\u27a1\ufe0f\ud83d\udcdd'}),"\n",(0,s.jsx)(n.p,{children:"Composition is the strictest relationship. It\u2019s like a question and its answers. If you delete the question, what\u2019s the point of the answers? They go down together! \ud83d\ude80"}),"\n",(0,s.jsx)(n.h3,{id:"example-question---answer-",children:"Example: Question \u2753 & Answer \u2705"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"A question has multiple answers."}),"\n",(0,s.jsx)(n.li,{children:"An answer belongs to a specific question."}),"\n",(0,s.jsx)(n.li,{children:"If the question is deleted, all answers vanish into the void. \ud83d\udd73\ufe0f"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"class Question {\n  int id;\n  String text;\n  List<Answer> answers;\n}\n\nclass Answer {\n  long id;\n  String text;\n  boolean correct;\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"\u274c Delete the question, and poof! All answers disappear too! Magic? No, just composition! \u2728"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-conclusion-whats-the-difference-",children:"\ud83c\udfaf Conclusion: What\u2019s the Difference? \ud83e\udd14"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Relationship Type"}),(0,s.jsx)(n.th,{children:"Ownership?"}),(0,s.jsx)(n.th,{children:"Lifecycle Dependency?"}),(0,s.jsx)(n.th,{children:"Example"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Association"})}),(0,s.jsx)(n.td,{children:"Nope \u274c"}),(0,s.jsx)(n.td,{children:"Independent \ud83d\udc83"}),(0,s.jsx)(n.td,{children:"Teacher & Student \ud83d\udc69\u200d\ud83c\udfeb\ud83d\udc68\u200d\ud83c\udf93"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Aggregation"})}),(0,s.jsx)(n.td,{children:"Yes \u2705"}),(0,s.jsx)(n.td,{children:"Independent \ud83d\udcaa"}),(0,s.jsx)(n.td,{children:"Phone & Battery \ud83d\udcf1\ud83d\udd0b"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Composition"})}),(0,s.jsx)(n.td,{children:"Yes \u2705"}),(0,s.jsx)(n.td,{children:"Dependent \ud83d\ude31"}),(0,s.jsx)(n.td,{children:"Question & Answer \u2753\ud83d\udcdd"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"Sometimes, deciding between association, aggregation, and composition is harder than picking a movie to watch. But with these fun examples, you\u2019ll never mix them up again! \ud83c\udf89"}),"\n",(0,s.jsx)(n.p,{children:"Have questions? Drop them in the comments! \ud83d\ude80"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Happy Learning!"})," \ud83d\ude03"]})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},2707:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/association-aggregation-composition-img-1cc11120fd1af08d27fdbea523d4ed90.png"},4769:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/banner-java-icon-0ae50e2293ff72244732cfbb42e27ed7.png"},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>r});var t=i(6540);const s={},a=t.createContext(s);function o(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);