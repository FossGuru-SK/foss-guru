"use strict";(self.webpackChunkfoss_guru=self.webpackChunkfoss_guru||[]).push([[4409],{8145:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>t,metadata:()=>o,toc:()=>g});const o=JSON.parse('{"id":"kits/java/Java Strings/Conversions/string-to-long","title":"Convert String to long in Java","description":"Java examples of converting a String to a long type using Long.parseLong(String), Long.valueOf(String) and new Long(String) constructor.","source":"@site/community/kits/java/Java Strings/Conversions/string-to-long.md","sourceDirName":"kits/java/Java Strings/Conversions","slug":"/kits/java/Java Strings/Conversions/string-to-long","permalink":"/foss-guru/community/kits/java/Java Strings/Conversions/string-to-long","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"id":"string-to-long","title":"Convert String to long in Java","description":"Java examples of converting a String to a long type using Long.parseLong(String), Long.valueOf(String) and new Long(String) constructor.","sidebar_position":3},"sidebar":"community","previous":{"title":"Convert int to String in Java (with Performance Comparison)","permalink":"/foss-guru/community/kits/java/Java Strings/Conversions/int-to-string"},"next":{"title":"Convert long to String in Java","permalink":"/foss-guru/community/kits/java/Java Strings/Conversions/long-to-string"}}');var a=r(4848),i=r(8453);const t={id:"string-to-long",title:"Convert String to long in Java",description:"Java examples of converting a String to a long type using Long.parseLong(String), Long.valueOf(String) and new Long(String) constructor.",sidebar_position:3},s=void 0,l={},g=[{value:"\ud83c\udfd7\ufe0f Java Fun: Converting Strings to Longs \ud83c\udfa2",id:"\ufe0f-java-fun-converting-strings-to-longs-",level:2},{value:"\u26a1 Quick Reference",id:"-quick-reference",level:2},{value:"\ud83d\udee0\ufe0f 1. Using <code>Long.valueOf(String)</code>",id:"\ufe0f-1-using-longvalueofstring",level:2},{value:"\ud83c\udfad Example",id:"-example",level:3},{value:"\ud83c\udfaf 2. Using <code>Long.parseLong(String)</code>",id:"-2-using-longparselongstring",level:2},{value:"\ud83c\udfcb\ufe0f\u200d\u2642\ufe0f Example",id:"\ufe0f\ufe0f-example",level:3},{value:"\ud83d\udd75\ufe0f\u200d\u2642\ufe0f Bonus Trick: Different Number Bases",id:"\ufe0f\ufe0f-bonus-trick-different-number-bases",level:3},{value:"\ud83d\ude80 3. Using <code>new Long(String)</code> Constructor (Old School)",id:"-3-using-new-longstring-constructor-old-school",level:2},{value:"\u2620\ufe0f 4. Beware the <code>NumberFormatException</code> Monster! \ud83d\udc09",id:"\ufe0f-4-beware-the-numberformatexception-monster-",level:2},{value:"\ud83c\udf89 Happy Learning!! \ud83e\uddd1\u200d\ud83d\udcbb",id:"-happy-learning-",level:2}];function c(n){const e={code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",img:"img",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{alt:"Banner java icon",src:r(4769).A+"",width:"370",height:"364"})}),"\n",(0,a.jsx)(e.h2,{id:"\ufe0f-java-fun-converting-strings-to-longs-",children:"\ud83c\udfd7\ufe0f Java Fun: Converting Strings to Longs \ud83c\udfa2"}),"\n",(0,a.jsx)(e.p,{children:"Ever found yourself in a Java jungle trying to convert a String into a Long? Fear not, brave coder! Let's explore three ways to achieve this transformation while having a bit of fun. \ud83c\udf89"}),"\n",(0,a.jsx)(e.h2,{id:"-quick-reference",children:"\u26a1 Quick Reference"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'String number = "2018"; // A String, not just a number!\n\nlong value1 = Long.parseLong(number, 10);  // The classic way!\n\nlong value2 = Long.valueOf(number);  // Another solid choice!\n\nlong value3 = new Long(number);  // Deprecated, but hey, it\u2019s an option!\n'})}),"\n",(0,a.jsx)(e.hr,{}),"\n",(0,a.jsxs)(e.h2,{id:"\ufe0f-1-using-longvalueofstring",children:["\ud83d\udee0\ufe0f 1. Using ",(0,a.jsx)(e.code,{children:"Long.valueOf(String)"})]}),"\n",(0,a.jsxs)(e.p,{children:["Think of ",(0,a.jsx)(e.code,{children:"Long.valueOf()"})," as a magic decoder ring for numbers in String disguise. It takes a String, checks if it's made of decimal digits, and ",(0,a.jsx)(e.strong,{children:"poof!"}),"\u2014out comes a long. The first character can be a ",(0,a.jsx)(e.code,{children:"+"})," or ",(0,a.jsx)(e.code,{children:"-"}),", but no funny business, or it throws a tantrum (",(0,a.jsx)(e.em,{children:"NumberFormatException"}),"). \ud83e\udd2f"]}),"\n",(0,a.jsx)(e.h3,{id:"-example",children:"\ud83c\udfad Example"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'String positiveNumber = "+12001";\nlong value1 = Long.valueOf(positiveNumber);   // 12001L\n\nString negativeNumber = "-22002";\nlong value2 = Long.valueOf(negativeNumber);   // -22002L\n'})}),"\n",(0,a.jsxs)(e.p,{children:["\ud83d\udea8 ",(0,a.jsx)(e.strong,{children:"Warning!"})," Try sneaking in a non-number character, and Java will catch you red-handed:"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'Assertions.assertThrows(NumberFormatException.class, () -> {\n  Long.valueOf("alexa");\n});\n'})}),"\n",(0,a.jsx)(e.hr,{}),"\n",(0,a.jsxs)(e.h2,{id:"-2-using-longparselongstring",children:["\ud83c\udfaf 2. Using ",(0,a.jsx)(e.code,{children:"Long.parseLong(String)"})]}),"\n",(0,a.jsxs)(e.p,{children:["This method is ",(0,a.jsx)(e.code,{children:"valueOf()"}),"'s twin, just without the extra wrapping. Same rules apply\u2014only decimal digits and an optional ",(0,a.jsx)(e.code,{children:"+"})," or ",(0,a.jsx)(e.code,{children:"-"})," sign are allowed. It does the job, and it does it well! \ud83c\udfc6"]}),"\n",(0,a.jsx)(e.h3,{id:"\ufe0f\ufe0f-example",children:"\ud83c\udfcb\ufe0f\u200d\u2642\ufe0f Example"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'String positiveNumber = "+12001";\nlong value1 = Long.parseLong(positiveNumber);   // 12001L\n\nString negativeNumber = "-22002";\nlong value2 = Long.parseLong(negativeNumber);   // -22002L\n'})}),"\n",(0,a.jsx)(e.h3,{id:"\ufe0f\ufe0f-bonus-trick-different-number-bases",children:"\ud83d\udd75\ufe0f\u200d\u2642\ufe0f Bonus Trick: Different Number Bases"}),"\n",(0,a.jsx)(e.p,{children:"Want to parse a hexadecimal (base 16) number? No problem!"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'String numberInHex = "-FF";\nlong value = Long.parseLong(numberInHex, 16);   // -255L\n'})}),"\n",(0,a.jsx)(e.hr,{}),"\n",(0,a.jsxs)(e.h2,{id:"-3-using-new-longstring-constructor-old-school",children:["\ud83d\ude80 3. Using ",(0,a.jsx)(e.code,{children:"new Long(String)"})," Constructor (Old School)"]}),"\n",(0,a.jsxs)(e.p,{children:["Back in the day (before Java 9), you could create a Long object using the ",(0,a.jsx)(e.code,{children:"new Long(String)"})," constructor. But like disco pants, this approach is ",(0,a.jsx)(e.strong,{children:"deprecated"}),". \ud83d\udd7a"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'long value = new Long("100");   // 100L\n'})}),"\n",(0,a.jsxs)(e.p,{children:["Use ",(0,a.jsx)(e.code,{children:"parseLong()"})," instead\u2014it\u2019s faster, cooler, and Java won\u2019t yell at you. \ud83d\ude0e"]}),"\n",(0,a.jsx)(e.hr,{}),"\n",(0,a.jsxs)(e.h2,{id:"\ufe0f-4-beware-the-numberformatexception-monster-",children:["\u2620\ufe0f 4. Beware the ",(0,a.jsx)(e.code,{children:"NumberFormatException"})," Monster! \ud83d\udc09"]}),"\n",(0,a.jsxs)(e.p,{children:["If your input string contains anything ",(0,a.jsx)(e.strong,{children:"other than"})," decimal digits (and an optional sign at the start), Java will throw a ",(0,a.jsx)(e.code,{children:"NumberFormatException"}),' at you faster than you can say "Oops!" \ud83d\ude31']}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'String number = "12001xyz";\nlong value = Long.parseLong(number);\n'})}),"\n",(0,a.jsxs)(e.p,{children:["\ud83d\udca5 ",(0,a.jsx)(e.strong,{children:"Boom! Runtime error incoming:"})]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'Exception in thread "main" java.lang.NumberFormatException: For input string: "12001xyz"\n    at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\n    at java.lang.Long.parseLong(Long.java:589)\n    at java.lang.Long.<init>(Long.java:965)\n    at com.howtodoinjava.StringExample.main(StringExample.java:9)\n'})}),"\n",(0,a.jsx)(e.p,{children:"So, keep those Strings clean, stick to digits, and happy coding! \ud83d\ude80"}),"\n",(0,a.jsx)(e.hr,{}),"\n",(0,a.jsx)(e.h2,{id:"-happy-learning-",children:"\ud83c\udf89 Happy Learning!! \ud83e\uddd1\u200d\ud83d\udcbb"})]})}function d(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(c,{...n})}):c(n)}},4769:(n,e,r)=>{r.d(e,{A:()=>o});const o=r.p+"assets/images/banner-java-icon-0ae50e2293ff72244732cfbb42e27ed7.png"},8453:(n,e,r)=>{r.d(e,{R:()=>t,x:()=>s});var o=r(6540);const a={},i=o.createContext(a);function t(n){const e=o.useContext(i);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:t(n.components),o.createElement(i.Provider,{value:e},n.children)}}}]);