"use strict";(self.webpackChunkfoss_guru=self.webpackChunkfoss_guru||[]).push([[9727],{9064:(e,a,o)=>{o.r(a),o.d(a,{assets:()=>i,contentTitle:()=>r,default:()=>u,frontMatter:()=>t,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"kits/java/Misc Topics/java-versions-features/java-9/java-platform-module-system","title":"Java Platform Module System","description":"JPMS (Java Platform Module System) is the major enhancement in Java 9.","source":"@site/community/kits/java/Misc Topics/java-versions-features/java-9/java-platform-module-system.md","sourceDirName":"kits/java/Misc Topics/java-versions-features/java-9","slug":"/kits/java/Misc Topics/java-versions-features/java-9/java-platform-module-system","permalink":"/foss-guru/community/kits/java/Misc Topics/java-versions-features/java-9/java-platform-module-system","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"java-platform-module-system","title":"Java Platform Module System","description":"JPMS (Java Platform Module System) is the major enhancement in Java 9.","sidebar_position":1},"sidebar":"community","previous":{"title":"Java 9 Features Intro","permalink":"/foss-guru/community/kits/java/Misc Topics/java-versions-features/java-9/introduction"},"next":{"title":"Private Methods in Interface \u2013 Java 9","permalink":"/foss-guru/community/kits/java/Misc Topics/java-versions-features/java-9/private-interface-methods"}}');var s=o(4848),l=o(8453);const t={id:"java-platform-module-system",title:"Java Platform Module System",description:"JPMS (Java Platform Module System) is the major enhancement in Java 9.",sidebar_position:1},r=void 0,i={},d=[{value:"\ud83d\ude80 Java Platform Module System (JPMS) \u2013 The Fun Version \ud83c\udfad",id:"-java-platform-module-system-jpms--the-fun-version-",level:2},{value:"\ud83e\uddd0 What the Heck is a Module Anyway?",id:"-what-the-heck-is-a-module-anyway",level:2},{value:"\ud83d\udee1\ufe0f The Three Golden Rules of Modules",id:"\ufe0f-the-three-golden-rules-of-modules",level:3},{value:"\ud83d\udea8 The Java 8 Problem \u2013 A Messy Apartment \ud83c\udfda\ufe0f",id:"-the-java-8-problem--a-messy-apartment-\ufe0f",level:2},{value:"\ud83c\udfc6 JPMS to the Rescue",id:"-jpms-to-the-rescue",level:2},{value:"\ud83c\udfd7\ufe0f Java Base Module \u2013 The VIP of Java",id:"\ufe0f-java-base-module--the-vip-of-java",level:3},{value:"\ud83e\uddd0 Modular vs. Non-Modular Code \u2013 Spot the Difference",id:"-modular-vs-non-modular-code--spot-the-difference",level:3},{value:"\ud83e\udd13 How to Write Modular Code (Because You\u2019re Fancy Now)",id:"-how-to-write-modular-code-because-youre-fancy-now",level:2},{value:"1\ufe0f\u20e3 Create a Java Modular Project \ud83c\udfd7\ufe0f",id:"1\ufe0f\u20e3-create-a-java-modular-project-\ufe0f",level:3},{value:"2\ufe0f\u20e3 Create Java Modules \ud83d\udce6",id:"2\ufe0f\u20e3-create-java-modules-",level:3},{value:"<strong>Project Structure:</strong>",id:"project-structure",level:4},{value:"<strong>helloworld/module-info.java</strong>",id:"helloworldmodule-infojava",level:4},{value:"<strong>HelloWorldApp.java</strong>",id:"helloworldappjava",level:4},{value:"<strong>test/module-info.java</strong>",id:"testmodule-infojava",level:4},{value:"<strong>TestApp.java</strong>",id:"testappjava",level:4},{value:"3\ufe0f\u20e3 Finally, Run Your Modular Code \ud83c\udfc3",id:"3\ufe0f\u20e3-finally-run-your-modular-code-",level:3},{value:"<strong>Output:</strong>",id:"output",level:4},{value:"\ud83c\udfaf The Final Word \u2013 Why Should You Care?",id:"-the-final-word--why-should-you-care",level:2},{value:"\ud83c\udf8a Happy Learning, and May Your Code Always Compile! \ud83c\udf8a",id:"-happy-learning-and-may-your-code-always-compile-",level:3}];function c(e){const a={code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.p,{children:(0,s.jsx)(a.img,{alt:"Banner java icon",src:o(3390).A+"",width:"370",height:"364"})}),"\n",(0,s.jsx)(a.h2,{id:"-java-platform-module-system-jpms--the-fun-version-",children:"\ud83d\ude80 Java Platform Module System (JPMS) \u2013 The Fun Version \ud83c\udfad"}),"\n",(0,s.jsxs)(a.p,{children:["Welcome to the exciting, slightly quirky world of JPMS (Java Platform Module System)! \ud83c\udfa9\u2728 Java 9 brought us something fancy called ",(0,s.jsx)(a.strong,{children:"Project Jigsaw"})," \ud83e\udde9, and trust me, it\u2019s a game-changer. If you\u2019ve ever wrestled with dependencies and felt like you were coding inside a spaghetti bowl \ud83c\udf5d, then JPMS is here to save the day!"]}),"\n",(0,s.jsx)(a.h2,{id:"-what-the-heck-is-a-module-anyway",children:"\ud83e\uddd0 What the Heck is a Module Anyway?"}),"\n",(0,s.jsxs)(a.p,{children:["Think of a ",(0,s.jsx)(a.strong,{children:"module"})," as a VIP club in your Java application. It has its own entrance (public APIs), its own secret rooms (private implementation), and it only lets in guests it trusts (explicit dependencies). In simple terms, modules are ",(0,s.jsx)(a.strong,{children:"super-organized packages with extra rules"}),"."]}),"\n",(0,s.jsx)(a.h3,{id:"\ufe0f-the-three-golden-rules-of-modules",children:"\ud83d\udee1\ufe0f The Three Golden Rules of Modules"}),"\n",(0,s.jsxs)(a.ol,{children:["\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"Strong Encapsulation \ud83d\udd12"})," \u2013 Hide the messy details, so your module is like a magician\u2019s trick \u2013 looks smooth on the outside, but nobody knows what\u2019s happening underneath!"]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"Stable Abstraction \ud83c\udfad"})," \u2013 Offer clear and stable public APIs, so others can use your module without breaking things every time you tweak your code."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"Explicit Dependencies \ud83e\uddfe"})," \u2013 Clearly declare what your module needs, avoiding those nasty surprise runtime errors that make you question your life choices."]}),"\n"]}),"\n",(0,s.jsx)(a.h2,{id:"-the-java-8-problem--a-messy-apartment-\ufe0f",children:"\ud83d\udea8 The Java 8 Problem \u2013 A Messy Apartment \ud83c\udfda\ufe0f"}),"\n",(0,s.jsxs)(a.p,{children:["Before Java 9, organizing your code was like living in an apartment with no walls \u2013 everything was just... ",(0,s.jsx)(a.em,{children:"there"}),". Java used ",(0,s.jsx)(a.strong,{children:"packages"})," to group classes, and ",(0,s.jsx)(a.strong,{children:"access modifiers"})," (public, private, etc.) to control visibility. But dependency management? That was a total ",(0,s.jsx)(a.strong,{children:"free-for-all"}),". \ud83d\ude35\u200d\ud83d\udcab"]}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"You imported whatever you needed. \ud83d\ude9a"}),"\n",(0,s.jsx)(a.li,{children:"You compiled your code. \ud83d\udce6"}),"\n",(0,s.jsx)(a.li,{children:"At runtime, everything could break because dependencies were unclear. \ud83d\udca5"}),"\n",(0,s.jsx)(a.li,{children:"Tools like Maven and Gradle became our band-aids. \ud83e\ude79"}),"\n"]}),"\n",(0,s.jsx)(a.h2,{id:"-jpms-to-the-rescue",children:"\ud83c\udfc6 JPMS to the Rescue"}),"\n",(0,s.jsxs)(a.p,{children:["With Java 9, we get ",(0,s.jsx)(a.strong,{children:"modules that actually know what they need"}),". It\u2019s like Marie Kondo came in and decluttered our dependencies. \ud83e\uddf9\u2728 Here\u2019s how JPMS fixes our problems:"]}),"\n",(0,s.jsxs)(a.ol,{children:["\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"It modularizes the JDK itself"})," \u2013 Meaning Java\u2019s core is now a neat, structured set of modules instead of one giant blob."]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"It provides a module system for developers"})," \u2013 So we can write ",(0,s.jsx)(a.strong,{children:"clean, well-structured, and scalable"})," applications."]}),"\n"]}),"\n",(0,s.jsx)(a.h3,{id:"\ufe0f-java-base-module--the-vip-of-java",children:"\ud83c\udfd7\ufe0f Java Base Module \u2013 The VIP of Java"}),"\n",(0,s.jsxs)(a.p,{children:["Java 9 introduced a special ",(0,s.jsx)(a.strong,{children:"java.base"})," module \u2013 the mother of all modules. Every module automatically depends on it. No exceptions. It\u2019s the ",(0,s.jsx)(a.strong,{children:"Beyonc\xe9 of Java"})," \u2013 you can\u2019t ignore it. \ud83d\udd76\ufe0f"]}),"\n",(0,s.jsx)(a.h3,{id:"-modular-vs-non-modular-code--spot-the-difference",children:"\ud83e\uddd0 Modular vs. Non-Modular Code \u2013 Spot the Difference"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:["A ",(0,s.jsx)(a.strong,{children:"module"})," is basically just a fancy jar file, with a ",(0,s.jsx)(a.code,{children:"module-info.class"})," file in it."]}),"\n",(0,s.jsxs)(a.li,{children:["To use a module, you put it in the ",(0,s.jsx)(a.strong,{children:"modulepath"})," instead of the classpath. (Yes, new terms to learn, yay! \ud83c\udf89)"]}),"\n",(0,s.jsx)(a.li,{children:"If you throw a modular jar into the classpath, Java ignores its module system and treats it like a normal jar. \ud83d\ude44"}),"\n"]}),"\n",(0,s.jsx)(a.h2,{id:"-how-to-write-modular-code-because-youre-fancy-now",children:"\ud83e\udd13 How to Write Modular Code (Because You\u2019re Fancy Now)"}),"\n",(0,s.jsx)(a.h3,{id:"1\ufe0f\u20e3-create-a-java-modular-project-\ufe0f",children:"1\ufe0f\u20e3 Create a Java Modular Project \ud83c\udfd7\ufe0f"}),"\n",(0,s.jsxs)(a.p,{children:["Start a new Java project. Give it a cool name. I chose ",(0,s.jsx)(a.strong,{children:"JavaAppOne"}),", but you can call it ",(0,s.jsx)(a.strong,{children:"Codezilla"})," if you want. \ud83d\ude0e"]}),"\n",(0,s.jsx)(a.h3,{id:"2\ufe0f\u20e3-create-java-modules-",children:"2\ufe0f\u20e3 Create Java Modules \ud83d\udce6"}),"\n",(0,s.jsxs)(a.p,{children:["Let\u2019s add two modules: ",(0,s.jsx)(a.code,{children:"helloworld"})," and ",(0,s.jsx)(a.code,{children:"test"}),"."]}),"\n",(0,s.jsx)(a.h4,{id:"project-structure",children:(0,s.jsx)(a.strong,{children:"Project Structure:"})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-java",children:"Java 9 Modules Project Structure\n  \u251c\u2500\u2500 helloworld\n  \u2502   \u251c\u2500\u2500 module-info.java\n  \u2502   \u251c\u2500\u2500 com.howtodoinjava.demo.HelloWorldApp.java\n  \u251c\u2500\u2500 test\n  \u2502   \u251c\u2500\u2500 module-info.java\n  \u2502   \u251c\u2500\u2500 com.test.TestApp.java\n"})}),"\n",(0,s.jsx)(a.h4,{id:"helloworldmodule-infojava",children:(0,s.jsx)(a.strong,{children:"helloworld/module-info.java"})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-java",children:"module helloworld {\n    exports com.howtodoinjava.demo;\n}\n"})}),"\n",(0,s.jsx)(a.h4,{id:"helloworldappjava",children:(0,s.jsx)(a.strong,{children:"HelloWorldApp.java"})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-java",children:'package com.howtodoinjava.demo;\n\npublic class HelloWorldApp {\n    public static void sayHello() {\n        System.out.println("Hello from HelloWorldApp");\n    }\n}\n'})}),"\n",(0,s.jsx)(a.h4,{id:"testmodule-infojava",children:(0,s.jsx)(a.strong,{children:"test/module-info.java"})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-java",children:"module test {\n    requires helloworld;\n}\n"})}),"\n",(0,s.jsx)(a.h4,{id:"testappjava",children:(0,s.jsx)(a.strong,{children:"TestApp.java"})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-java",children:"package com.test;\n\nimport com.howtodoinjava.demo.HelloWorldApp;\n\npublic class TestApp {\n    public static void main(String[] args) {\n        HelloWorldApp.sayHello();\n    }\n}\n"})}),"\n",(0,s.jsx)(a.h3,{id:"3\ufe0f\u20e3-finally-run-your-modular-code-",children:"3\ufe0f\u20e3 Finally, Run Your Modular Code \ud83c\udfc3"}),"\n",(0,s.jsx)(a.h4,{id:"output",children:(0,s.jsx)(a.strong,{children:"Output:"})}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-java",children:"Hello from HelloWorldApp\n"})}),"\n",(0,s.jsx)(a.p,{children:"BOOM. \ud83d\udca5 Modules are working! \ud83c\udf89"}),"\n",(0,s.jsx)(a.h2,{id:"-the-final-word--why-should-you-care",children:"\ud83c\udfaf The Final Word \u2013 Why Should You Care?"}),"\n",(0,s.jsxs)(a.p,{children:["JPMS isn\u2019t just another Java feature \u2013 it\u2019s an ",(0,s.jsx)(a.strong,{children:"architectural revolution"}),". \ud83c\udfdb\ufe0f If you\u2019ve ever heard horror stories about ",(0,s.jsx)(a.strong,{children:"spaghetti architectures"})," and ",(0,s.jsx)(a.strong,{children:"messy monoliths"}),", modularity is here to save the day. \ud83e\uddb8"]}),"\n",(0,s.jsxs)(a.p,{children:["But is JPMS perfect? Nope. \ud83e\udd37 Some frameworks are still catching up, and it may take a while for full adoption. But Java has taken ",(0,s.jsx)(a.strong,{children:"a big leap forward"}),", and it\u2019s worth getting ahead of the curve. \ud83d\ude80"]}),"\n",(0,s.jsx)(a.h3,{id:"-happy-learning-and-may-your-code-always-compile-",children:"\ud83c\udf8a Happy Learning, and May Your Code Always Compile! \ud83c\udf8a"})]})}function u(e={}){const{wrapper:a}={...(0,l.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},3390:(e,a,o)=>{o.d(a,{A:()=>n});const n=o.p+"assets/images/banner-java-icon-0ae50e2293ff72244732cfbb42e27ed7.png"},8453:(e,a,o)=>{o.d(a,{R:()=>t,x:()=>r});var n=o(6540);const s={},l=n.createContext(s);function t(e){const a=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function r(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),n.createElement(l.Provider,{value:a},e.children)}}}]);