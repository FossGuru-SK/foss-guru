"use strict";(self.webpackChunkfoss_guru=self.webpackChunkfoss_guru||[]).push([[5255],{8417:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"kits/java/Flow Control Statements/switch","title":"Java Switch","description":"Java Language Switch statement","source":"@site/community/kits/java/Flow Control Statements/switch.md","sourceDirName":"kits/java/Flow Control Statements","slug":"/kits/java/Flow Control Statements/switch","permalink":"/foss-guru/community/kits/java/Flow Control Statements/switch","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"switch","title":"Java Switch","description":"Java Language Switch statement","sidebar_position":2},"sidebar":"community","previous":{"title":"Java if-else","permalink":"/foss-guru/community/kits/java/Flow Control Statements/if-else"},"next":{"title":"Java Ternary Operator","permalink":"/foss-guru/community/kits/java/Flow Control Statements/ternary-operator"}}');var a=t(4848),i=t(8453);const l={id:"switch",title:"Java Switch",description:"Java Language Switch statement",sidebar_position:2},r=void 0,c={},o=[{value:"\ud83c\udfad Java Switch Statements: The Drama of Code Execution \ud83c\udfad",id:"-java-switch-statements-the-drama-of-code-execution-",level:2},{value:"\ud83c\udfac Act 1: The Basics of Switch Statements",id:"-act-1-the-basics-of-switch-statements",level:2},{value:"\ud83d\udcdc Syntax",id:"-syntax",level:3},{value:"\ud83c\udfad Execution Flow",id:"-execution-flow",level:3},{value:"\ud83c\udfac Act 2: Making Decisions Like a Pro",id:"-act-2-making-decisions-like-a-pro",level:2},{value:"\ud83c\udfd6\ufe0f Is It a Weekday or Weekend?",id:"\ufe0f-is-it-a-weekday-or-weekend",level:3},{value:"<strong>Traditional Switch Statement</strong>",id:"traditional-switch-statement",level:4},{value:"\ud83c\udfa8 Cleaner, Sleeker Version with Arrow Syntax",id:"-cleaner-sleeker-version-with-arrow-syntax",level:3},{value:"\ud83c\udfac Act 3: Switch Expressions Enter the Scene \ud83c\udfad",id:"-act-3-switch-expressions-enter-the-scene-",level:2},{value:"\ud83d\udd04 Switch Expression = Less Boilerplate",id:"-switch-expression--less-boilerplate",level:3},{value:"\ud83c\udfac Act 4: Mind-Blowing Use Cases \ud83e\udd2f",id:"-act-4-mind-blowing-use-cases-",level:2},{value:"\ud83d\udd0d Type Checking with Switch Statements",id:"-type-checking-with-switch-statements",level:3},{value:"\ud83d\uded1 Handling <code>null</code> Values (Java 17+)",id:"-handling-null-values-java-17",level:3},{value:"\ud83c\udfac Act 5: The Drama of Restrictions \ud83c\udfad",id:"-act-5-the-drama-of-restrictions-",level:2},{value:"\u26a0\ufe0f Case Labels Must Be Within Data Type Range",id:"\ufe0f-case-labels-must-be-within-data-type-range",level:3},{value:"\u26a0\ufe0f Duplicate Case Labels? Not on My Watch! \u26d4",id:"\ufe0f-duplicate-case-labels-not-on-my-watch-",level:3},{value:"\ud83c\udf89 The Final Bow",id:"-the-final-bow",level:2}];function h(e){const n={code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Banner java icon",src:t(3390).A+"",width:"370",height:"364"})}),"\n",(0,a.jsx)(n.h2,{id:"-java-switch-statements-the-drama-of-code-execution-",children:"\ud83c\udfad Java Switch Statements: The Drama of Code Execution \ud83c\udfad"}),"\n",(0,a.jsx)(n.p,{children:"Java switch statements are like the drama queens of programming\u2014giving multiple possible execution paths with flair! They swoop in to replace if-else statements, making our code look cleaner, sharper, and, well, just more fabulous. \ud83d\udc85"}),"\n",(0,a.jsx)(n.p,{children:"But wait\u2014switch statements have evolved! Over time, they\u2019ve learned new tricks, and in this tutorial, we\u2019ll explore both the basics and the glow-ups in later Java versions. \ud83c\udf1f"}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"-act-1-the-basics-of-switch-statements",children:"\ud83c\udfac Act 1: The Basics of Switch Statements"}),"\n",(0,a.jsx)(n.h3,{id:"-syntax",children:"\ud83d\udcdc Syntax"}),"\n",(0,a.jsx)(n.p,{children:"Here\u2019s the classic switch statement format:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"switch (expression) {\n    case labelOne:\n        statements;\n        break;\n    case labelTwo:\n        statements;\n        break;\n    case labelThree:\n        statements;\n        break;\n    default:\n        statements;\n}\n"})}),"\n",(0,a.jsxs)(n.p,{children:["\ud83e\uddd0 ",(0,a.jsx)(n.strong,{children:"Rules of Engagement:"})]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Expression value must be one of these VIPs:","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Primitive types (byte, short, char, int)"}),"\n",(0,a.jsx)(n.li,{children:"Wrapper classes (Character, Byte, Short, Integer)"}),"\n",(0,a.jsx)(n.li,{children:"Enums (since Java 5)"}),"\n",(0,a.jsx)(n.li,{children:"Strings (since Java 7)"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["Labels must be ",(0,a.jsx)(n.strong,{children:"compile-time constants"}),"\u2014no last-minute surprises allowed! \u23f3"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"-execution-flow",children:"\ud83c\udfad Execution Flow"}),"\n",(0,a.jsx)(n.p,{children:"Here\u2019s how the magic happens:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Java evaluates the switch expression. \ud83d\udcca"}),"\n",(0,a.jsx)(n.li,{children:"If the datatype of the expression and case labels don\u2019t match\u2014boom! Compilation error. \ud83d\udea8"}),"\n",(0,a.jsxs)(n.li,{children:["If a match is found, execution starts there and continues until a ",(0,a.jsx)(n.code,{children:"break"})," statement stops the fun."]}),"\n",(0,a.jsxs)(n.li,{children:["No match? The ",(0,a.jsx)(n.code,{children:"default"})," case jumps in like an understudy on opening night! \ud83c\udfa4"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["\ud83d\udca1 ",(0,a.jsx)(n.strong,{children:"Pro Tip:"})," You don\u2019t ",(0,a.jsx)(n.em,{children:"need"})," a ",(0,a.jsx)(n.code,{children:"break"})," after ",(0,a.jsx)(n.code,{children:"default"}),", because the curtain falls naturally at the end of the switch statement. \ud83c\udfad"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"-act-2-making-decisions-like-a-pro",children:"\ud83c\udfac Act 2: Making Decisions Like a Pro"}),"\n",(0,a.jsx)(n.h3,{id:"\ufe0f-is-it-a-weekday-or-weekend",children:"\ud83c\udfd6\ufe0f Is It a Weekday or Weekend?"}),"\n",(0,a.jsx)(n.p,{children:"Let\u2019s check if today is a chill weekend or a gotta-work weekday! \ud83c\udfdd\ufe0f"}),"\n",(0,a.jsx)(n.h4,{id:"traditional-switch-statement",children:(0,a.jsx)(n.strong,{children:"Traditional Switch Statement"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'public class SwitchStatement {\n    public static void main(String[] args) {\n        System.out.println("Tuesday is : " + isWeekDay(Day.TUE));\n        System.out.println("Sunday is : " + isWeekDay(Day.SUN));\n    }\n    \n    public static Boolean isWeekDay(Day day) {\n        Boolean result = false;\n        switch(day) {\n            case MON, TUE, WED, THUR, FRI:\n                result = true;\n                break;\n            case SAT, SUN:\n                result = false;\n                break;\n            default:\n                throw new IllegalArgumentException("Invalid day: " + day.name());\n        }\n        return result;\n    }\n}\n\nenum Day {\n    MON, TUE, WED, THUR, FRI, SAT, SUN\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["\u2705 Works fine, but let\u2019s make it ",(0,a.jsx)(n.em,{children:"even better"}),"!"]}),"\n",(0,a.jsx)(n.h3,{id:"-cleaner-sleeker-version-with-arrow-syntax",children:"\ud83c\udfa8 Cleaner, Sleeker Version with Arrow Syntax"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'public static Boolean isWeekDay(Day day) {\n    return switch(day) {\n        case MON, TUE, WED, THUR, FRI -> true;\n        case SAT, SUN -> false;\n        default -> throw new IllegalArgumentException("Invalid day: " + day.name());\n    };\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["\ud83d\udca5 ",(0,a.jsxs)(n.strong,{children:["Boom! No more ",(0,a.jsx)(n.code,{children:"break"})," statements!"]})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"-act-3-switch-expressions-enter-the-scene-",children:"\ud83c\udfac Act 3: Switch Expressions Enter the Scene \ud83c\udfad"}),"\n",(0,a.jsx)(n.h3,{id:"-switch-expression--less-boilerplate",children:"\ud83d\udd04 Switch Expression = Less Boilerplate"}),"\n",(0,a.jsxs)(n.p,{children:["Java 12 introduced ",(0,a.jsx)(n.strong,{children:"switch expressions"}),"\u2014the switch statement but ",(0,a.jsx)(n.em,{children:"with an IQ boost"})," \ud83e\udde0:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'public static Boolean isWeekDay(Day day) {\n     return switch(day) {\n        case MON, TUE, WED, THUR, FRI -> {\n            System.out.println("It\'s a weekday");\n            yield true;\n        }\n        case SAT, SUN -> {\n            System.out.println("It\'s a weekend");\n            yield false;\n        }\n        default -> throw new IllegalArgumentException("Invalid day: " + day.name());\n    };\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["\ud83d\udce2 ",(0,a.jsxs)(n.strong,{children:["The ",(0,a.jsx)(n.code,{children:"yield"})," keyword"]})," lets you execute multiple statements before returning a value. Neat, right? \ud83e\udd29"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"-act-4-mind-blowing-use-cases-",children:"\ud83c\udfac Act 4: Mind-Blowing Use Cases \ud83e\udd2f"}),"\n",(0,a.jsx)(n.h3,{id:"-type-checking-with-switch-statements",children:"\ud83d\udd0d Type Checking with Switch Statements"}),"\n",(0,a.jsxs)(n.p,{children:["Remember the ",(0,a.jsx)(n.em,{children:"old"})," way of checking an object's type? \ud83d\udc75"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'Object o;\nif (o instanceof String) {\n    String s = (String) o;\n    System.out.println("String: " + s);\n} else if (o instanceof Integer) {\n    Integer i = (Integer) o;\n    System.out.println("Integer: " + i);\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["\ud83d\ude34 Boring! Here\u2019s the ",(0,a.jsx)(n.em,{children:"new"})," way in Java 17:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'switch (o) {\n    case Integer i -> System.out.println("Integer: " + i);\n    case String s -> System.out.println("String: " + s);\n    default -> System.out.println("Unknown type");\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["\ud83d\udd25 ",(0,a.jsx)(n.strong,{children:"Less code, same magic!"})]}),"\n",(0,a.jsxs)(n.h3,{id:"-handling-null-values-java-17",children:["\ud83d\uded1 Handling ",(0,a.jsx)(n.code,{children:"null"})," Values (Java 17+)"]}),"\n",(0,a.jsxs)(n.p,{children:["Before Java 17, ",(0,a.jsx)(n.code,{children:"null"})," would cause a ",(0,a.jsx)(n.strong,{children:"NullPointerException"})," \ud83d\udc80"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'if (s == null) {\n    System.out.println("Oops!");\n    return;\n}\nswitch (s) {\n    case "Foo", "Bar" -> System.out.println("Great");\n    default -> System.out.println("Ok");\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["In Java 17, you can ",(0,a.jsx)(n.em,{children:"actually"})," switch on ",(0,a.jsx)(n.code,{children:"null"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'switch (s) {\n    case null -> System.out.println("Oops");\n    case "Foo", "Bar" -> System.out.println("Great");\n    default -> System.out.println("Ok");\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["\ud83d\udcaf ",(0,a.jsx)(n.strong,{children:"Game-changer!"})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"-act-5-the-drama-of-restrictions-",children:"\ud83c\udfac Act 5: The Drama of Restrictions \ud83c\udfad"}),"\n",(0,a.jsx)(n.h3,{id:"\ufe0f-case-labels-must-be-within-data-type-range",children:"\u26a0\ufe0f Case Labels Must Be Within Data Type Range"}),"\n",(0,a.jsxs)(n.p,{children:["This ",(0,a.jsx)(n.strong,{children:"won\u2019t"})," compile:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"byte b = 10;\nswitch (b) {\n    case 5:\n        b++;\n        break;\n    case 150: // \u274c Compile-time error! 150 > 127\n        b--;\n        break;\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"\ufe0f-duplicate-case-labels-not-on-my-watch-",children:"\u26a0\ufe0f Duplicate Case Labels? Not on My Watch! \u26d4"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:"int num = 10;\nswitch (num) {\n    case 10:\n        num++;\n        break;\n    case 10: // \u274c Duplicate case label!\n        num--;\n        break;\n}\n"})}),"\n",(0,a.jsxs)(n.p,{children:["\ud83d\udea8 ",(0,a.jsx)(n.strong,{children:"Java won\u2019t let you be redundant!"})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"-the-final-bow",children:"\ud83c\udf89 The Final Bow"}),"\n",(0,a.jsxs)(n.p,{children:["Switch statements are like ",(0,a.jsx)(n.em,{children:"superstar actors"}),"\u2014dramatic, efficient, and full of surprises. From ",(0,a.jsx)(n.strong,{children:"basic switches"})," to ",(0,a.jsx)(n.strong,{children:"arrow syntax, switch expressions, and type checking"}),", we\u2019ve seen how Java makes decision-making in code way more elegant. \ud83d\udc83\ud83d\udd7a"]}),"\n",(0,a.jsxs)(n.p,{children:["Keep coding, and remember: ",(0,a.jsx)(n.strong,{children:"always break your cases\u2026 unless Java does it for you!"})," \ud83d\ude06"]}),"\n",(0,a.jsx)(n.p,{children:"Happy Learning! \ud83d\ude80"})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},3390:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/banner-java-icon-0ae50e2293ff72244732cfbb42e27ed7.png"},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var s=t(6540);const a={},i=s.createContext(a);function l(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);