"use strict";(self.webpackChunkfoss_guru=self.webpackChunkfoss_guru||[]).push([[3896],{6315:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"kits/java/Java Strings/Conversions/string-to-inputstream","title":"Convert String to InputStream in Java","description":"Java example to convert String to InputStream using ByteArrayInputStream and IOUtils classes. Writing String to InputSteam is a frequent job .","source":"@site/community/kits/java/Java Strings/Conversions/string-to-inputstream.md","sourceDirName":"kits/java/Java Strings/Conversions","slug":"/kits/java/Java Strings/Conversions/string-to-inputstream","permalink":"/foss-guru/community/kits/java/Java Strings/Conversions/string-to-inputstream","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"id":"string-to-inputstream","title":"Convert String to InputStream in Java","description":"Java example to convert String to InputStream using ByteArrayInputStream and IOUtils classes. Writing String to InputSteam is a frequent job .","sidebar_position":8},"sidebar":"community","previous":{"title":"Join or Concatenate Strings with Comma in Java","permalink":"/foss-guru/community/kits/java/Java Strings/Conversions/join-or-concatenate-with-comma"},"next":{"title":"Convert InputStream to String in Java","permalink":"/foss-guru/community/kits/java/Java Strings/Conversions/inputStream-to-string"}}');var r=t(4848),i=t(8453);const a={id:"string-to-inputstream",title:"Convert String to InputStream in Java",description:"Java example to convert String to InputStream using ByteArrayInputStream and IOUtils classes. Writing String to InputSteam is a frequent job .",sidebar_position:8},o=void 0,c={},d=[{value:"\ud83c\udfb8 Rocking Java: Convert String to InputStream Like a Pro",id:"-rocking-java-convert-string-to-inputstream-like-a-pro",level:2},{value:"\ud83d\udd25 Why Should You Care?",id:"-why-should-you-care",level:3},{value:"1\ufe0f\u20e3 Using <code>ByteArrayInputStream</code> \ud83c\udfc6",id:"1\ufe0f\u20e3-using-bytearrayinputstream-",level:2},{value:"2\ufe0f\u20e3 The Apache Commons IO Power Move \ud83e\uddb8\u200d\u2642\ufe0f",id:"2\ufe0f\u20e3-the-apache-commons-io-power-move-\ufe0f",level:2},{value:"\ud83d\udce6 First, Add This Dependency (if you&#39;re using Maven)",id:"-first-add-this-dependency-if-youre-using-maven",level:3},{value:"\ud83d\udee0\ufe0f Then, Use <code>IOUtils.toInputStream()</code>",id:"\ufe0f-then-use-ioutilstoinputstream",level:3},{value:"\ud83c\udfc1 Final Thoughts",id:"-final-thoughts",level:2}];function u(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Banner java icon",src:t(3390).A+"",width:"370",height:"364"})}),"\n",(0,r.jsx)(n.h2,{id:"-rocking-java-convert-string-to-inputstream-like-a-pro",children:"\ud83c\udfb8 Rocking Java: Convert String to InputStream Like a Pro"}),"\n",(0,r.jsxs)(n.p,{children:["Ever found yourself needing to turn a simple ",(0,r.jsx)(n.code,{children:"String"})," into an ",(0,r.jsx)(n.code,{children:"InputStream"}),"? Whether you're slinging code in a high-stakes production app or just flexing your Java muscles, knowing this trick will make your life easier! \ud83d\udca1"]}),"\n",(0,r.jsx)(n.h3,{id:"-why-should-you-care",children:"\ud83d\udd25 Why Should You Care?"}),"\n",(0,r.jsx)(n.p,{children:"Writing strings to streams is an everyday thing in Java, and having a few slick shortcuts up your sleeve can save the day! Let's dive into some cool ways to do this."}),"\n",(0,r.jsxs)(n.h2,{id:"1\ufe0f\u20e3-using-bytearrayinputstream-",children:["1\ufe0f\u20e3 Using ",(0,r.jsx)(n.code,{children:"ByteArrayInputStream"})," \ud83c\udfc6"]}),"\n",(0,r.jsxs)(n.p,{children:["This is the simplest and most no-nonsense way to get an ",(0,r.jsx)(n.code,{children:"InputStream"})," from a ",(0,r.jsx)(n.code,{children:"String"}),". No external dependencies, just pure Java magic. \u2728"]}),"\n",(0,r.jsx)(n.p,{children:"\ud83d\udccc How does it work?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.code,{children:"getBytes()"})," method converts the ",(0,r.jsx)(n.code,{children:"String"})," into a byte array."]}),"\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.code,{children:"ByteArrayInputStream"})," takes those bytes and gives you an ",(0,r.jsx)(n.code,{children:"InputStream"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'String string = "howtodoinjava.com";\nInputStream instream = new ByteArrayInputStream(string.getBytes());\n'})}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udd25 ",(0,r.jsx)(n.strong,{children:"Pro Tip:"})," Want to specify a charset? Use ",(0,r.jsx)(n.code,{children:"getBytes(Charset charset)"}),". The ",(0,r.jsx)(n.code,{children:"StandardCharsets"})," class makes it easy:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"InputStream instream = new ByteArrayInputStream(string.getBytes(StandardCharsets.UTF_8));\n"})}),"\n",(0,r.jsx)(n.h2,{id:"2\ufe0f\u20e3-the-apache-commons-io-power-move-\ufe0f",children:"2\ufe0f\u20e3 The Apache Commons IO Power Move \ud83e\uddb8\u200d\u2642\ufe0f"}),"\n",(0,r.jsxs)(n.p,{children:["If you're using ",(0,r.jsx)(n.a,{href:"https://mvnrepository.com/artifact/commons-io/commons-io",children:"Apache Commons IO"})," (which many projects already do), you can make your code look even slicker. \ud83d\ude0e"]}),"\n",(0,r.jsx)(n.h3,{id:"-first-add-this-dependency-if-youre-using-maven",children:"\ud83d\udce6 First, Add This Dependency (if you're using Maven)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<dependency>\n    <groupId>commons-io</groupId>\n    <artifactId>commons-io</artifactId>\n    <version>2.11.0</version>\n</dependency>\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"\ufe0f-then-use-ioutilstoinputstream",children:["\ud83d\udee0\ufe0f Then, Use ",(0,r.jsx)(n.code,{children:"IOUtils.toInputStream()"})]}),"\n",(0,r.jsx)(n.p,{children:"This method makes your code ultra-readable! \ud83d\ude80"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'String string = "howtodoinjava.com";\nInputStream inStream = IOUtils.toInputStream(string, StandardCharsets.UTF_8);\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-final-thoughts",children:"\ud83c\udfc1 Final Thoughts"}),"\n",(0,r.jsxs)(n.p,{children:["Both methods are great, but if you want a clean, dependency-free solution, go for ",(0,r.jsx)(n.code,{children:"ByteArrayInputStream"}),". If you're already using Apache Commons, then ",(0,r.jsx)(n.code,{children:"IOUtils.toInputStream()"})," is a fantastic alternative! \ud83d\udca1"]}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\ude80 ",(0,r.jsx)(n.strong,{children:"Now, go forth and stream like a boss!"})," \ud83d\ude80"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"\ud83d\udce3 Got questions? Drop them in the comments!"}),"\n",(0,r.jsxs)(n.p,{children:["\ud83c\udf89 ",(0,r.jsx)(n.strong,{children:"Happy Coding!"})," \ud83c\udf89"]})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},3390:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/banner-java-icon-0ae50e2293ff72244732cfbb42e27ed7.png"},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var s=t(6540);const r={},i=s.createContext(r);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);