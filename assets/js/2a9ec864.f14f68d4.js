"use strict";(self.webpackChunkfoss_guru=self.webpackChunkfoss_guru||[]).push([[285],{2554:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>l,frontMatter:()=>i,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"kits/spring-ai/Getting Started/structured-output","title":"Spring AI Structured Output Converters","description":"Spring AI Structured Output Converters (List, Map and Bean)","source":"@site/community/kits/spring-ai/Getting Started/structured-output.md","sourceDirName":"kits/spring-ai/Getting Started","slug":"/kits/spring-ai/Getting Started/structured-output","permalink":"/foss-guru/community/kits/spring-ai/Getting Started/structured-output","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"id":"structured-output","title":"Spring AI Structured Output Converters","description":"Spring AI Structured Output Converters (List, Map and Bean)","sidebar_position":3},"sidebar":"community","previous":{"title":"Spring AI PromptTemplate","permalink":"/foss-guru/community/kits/spring-ai/Getting Started/prompt-templates"},"next":{"title":"Ollama Local Setup and Spring AI Integration","permalink":"/foss-guru/community/kits/spring-ai/Getting Started/setup-ollama"}}');var s=n(4848),a=n(8453);const i={id:"structured-output",title:"Spring AI Structured Output Converters",description:"Spring AI Structured Output Converters (List, Map and Bean)",sidebar_position:3},o=void 0,u={},p=[{value:"\ud83d\ude80 Fun with Spring AI Structured Output Converters",id:"-fun-with-spring-ai-structured-output-converters",level:2},{value:"\ud83d\udee0 1. Setup",id:"-1-setup",level:2},{value:"\ud83d\udd11 Set up OpenAI API Key",id:"-set-up-openai-api-key",level:3},{value:"\ud83d\udce6 Add Dependencies",id:"-add-dependencies",level:3},{value:"\ud83c\udf0d 2. <strong>MapOutputConverter</strong>: The &quot;Everything-in-a-Map&quot; Trick",id:"-2-mapoutputconverter-the-everything-in-a-map-trick",level:2},{value:"\ud83c\udfaf Example: Country-Capital Lookup",id:"-example-country-capital-lookup",level:3},{value:"\ud83d\udcdd 3. <strong>ListOutputConverter</strong>: &quot;Gimme a List!&quot;",id:"-3-listoutputconverter-gimme-a-list",level:2},{value:"\ud83c\udfaf Example: Capital Cities as a List",id:"-example-capital-cities-as-a-list",level:3},{value:"\ud83c\udfd7 4. <strong>BeanOutputConverter</strong>: The &quot;Shape It Like a POJO&quot; Trick",id:"-4-beanoutputconverter-the-shape-it-like-a-pojo-trick",level:2},{value:"\ud83c\udfaf Example: Top 10 Cities of a Country",id:"-example-top-10-cities-of-a-country",level:3},{value:"\ud83c\udfac 5. Conclusion",id:"-5-conclusion",level:2}];function c(e){const t={code:"code",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Banner Spring AI Icon",src:n(9666).A+"",width:"1022",height:"239"})}),"\n",(0,s.jsx)(t.h2,{id:"-fun-with-spring-ai-structured-output-converters",children:"\ud83d\ude80 Fun with Spring AI Structured Output Converters"}),"\n",(0,s.jsxs)(t.p,{children:["So, you\u2019ve got an LLM (Large Language Model) churning out text, but you need it structured neatly\u2014no wild, unstructured responses allowed! Enter ",(0,s.jsx)(t.strong,{children:"Spring AI Structured Output Converters"}),"\u2014your best buddies for transforming AI-generated chaos into well-organized ",(0,s.jsx)(t.strong,{children:"Lists, Maps, or Java Beans"}),". \ud83c\udfa9\u2728"]}),"\n",(0,s.jsx)(t.p,{children:"These converters ensure that the AI plays nice by:"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Giving clear instructions"})," about the required format (JSON, XML, etc.)."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Parsing the response"})," into neat Java objects\u2014no messy surprises! \ud83c\udfaf"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"-1-setup",children:"\ud83d\udee0 1. Setup"}),"\n",(0,s.jsx)(t.p,{children:"Before we unleash the AI magic, make sure your system is ready to roll:"}),"\n",(0,s.jsx)(t.h3,{id:"-set-up-openai-api-key",children:"\ud83d\udd11 Set up OpenAI API Key"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"export OPENAI_API_KEY=[your_openai_api_key]\n"})}),"\n",(0,s.jsx)(t.p,{children:"And let\u2019s make sure your Spring Boot app knows where to find it:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-properties",children:"spring.ai.openai.api-key=${OPENAI_API_KEY}\n"})}),"\n",(0,s.jsx)(t.h3,{id:"-add-dependencies",children:"\ud83d\udce6 Add Dependencies"}),"\n",(0,s.jsxs)(t.p,{children:["Add the magic potion (Spring AI OpenAI dependency) to your ",(0,s.jsx)(t.code,{children:"pom.xml"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-xml",children:"<dependency>\n  <groupId>org.springframework.ai</groupId>\n  <artifactId>spring-ai-openai-spring-boot-starter</artifactId>\n</dependency>\n"})}),"\n",(0,s.jsx)(t.p,{children:"Now, we\u2019re ready to explore the converters! \ud83d\ude80"}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.h2,{id:"-2-mapoutputconverter-the-everything-in-a-map-trick",children:["\ud83c\udf0d 2. ",(0,s.jsx)(t.strong,{children:"MapOutputConverter"}),': The "Everything-in-a-Map" Trick']}),"\n",(0,s.jsxs)(t.p,{children:["This converter ensures LLM responds in a ",(0,s.jsx)(t.strong,{children:"Map format"})," (RFC8259-compliant JSON). Think of it like stuffing AI\u2019s response neatly into a HashMap. \ud83d\uddfa\ufe0f"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'public class MapOutputConverter extends AbstractMessageOutputConverter<Map<String, Object>> {\n    @Override\n    public String getFormat() {\n        return """\n            Your response should be in JSON format.\n            The data structure for the JSON should match this Java class: java.util.HashMap\n            Do not include any explanations, only provide an RFC8259-compliant JSON response.\n        """;\n    }\n}\n'})}),"\n",(0,s.jsx)(t.h3,{id:"-example-country-capital-lookup",children:"\ud83c\udfaf Example: Country-Capital Lookup"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'@GetMapping("/country-capital-service/map")\npublic Map<String, Object> getCapitalNamesInMap(@RequestParam String countryNamesCsv) {\n  if (countryNamesCsv == null || countryNamesCsv.isEmpty()) {\n    throw new IllegalArgumentException("Country names CSV cannot be null or empty");\n  }\n\n  MapOutputConverter converter = new MapOutputConverter();\n  PromptTemplate pt = new PromptTemplate("For these countries {countryNamesCsv}, return their capitals. {format}");\n  Prompt renderedPrompt = pt.create(Map.of("countryNamesCsv", countryNamesCsv, "format", converter.getFormat()));\n\n  ChatResponse response = chatClient.call(renderedPrompt);\n  return converter.parse(response.getResult().getOutput().getContent());\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["\u2705 Output? A sweet, structured JSON response, neatly packed in a ",(0,s.jsx)(t.strong,{children:"Map"}),"! \ud83d\uddfa\ufe0f"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.h2,{id:"-3-listoutputconverter-gimme-a-list",children:["\ud83d\udcdd 3. ",(0,s.jsx)(t.strong,{children:"ListOutputConverter"}),': "Gimme a List!"']}),"\n",(0,s.jsxs)(t.p,{children:["This one is all about lists! It forces the AI to return ",(0,s.jsx)(t.strong,{children:"comma-separated values"})," (CSV) and then parses them into a Java List. \ud83d\udcdd"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'public class ListOutputConverter extends AbstractConversionServiceOutputConverter<List<String>> {\n    @Override\n    public String getFormat() {\n        return """\n            Your response should be a list of comma-separated values.\n            eg: `foo, bar, baz`\n        """;\n    }\n}\n'})}),"\n",(0,s.jsx)(t.h3,{id:"-example-capital-cities-as-a-list",children:"\ud83c\udfaf Example: Capital Cities as a List"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'@GetMapping("/country-capital-service/list")\npublic List<String> getCapitalNamesInList(@RequestParam String countryNamesCsv) {\n  if (countryNamesCsv == null || countryNamesCsv.isEmpty()) {\n    throw new IllegalArgumentException("Country names CSV cannot be null or empty");\n  }\n\n  ListOutputConverter converter = new ListOutputConverter(new DefaultConversionService());\n  PromptTemplate pt = new PromptTemplate("For these countries {countryNamesCsv}, return their capitals. {format}");\n  Prompt renderedPrompt = pt.create(Map.of("countryNamesCsv", countryNamesCsv, "format", converter.getFormat()));\n\n  ChatResponse response = chatClient.call(renderedPrompt);\n  return converter.parse(response.getResult().getOutput().getContent());\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["\u2705 Expected Output: ",(0,s.jsx)(t.code,{children:'"New Delhi, Washington D.C., Ottawa, Jerusalem"'})," neatly parsed into a ",(0,s.jsx)(t.code,{children:"List<String>"}),". \u2705"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsxs)(t.h2,{id:"-4-beanoutputconverter-the-shape-it-like-a-pojo-trick",children:["\ud83c\udfd7 4. ",(0,s.jsx)(t.strong,{children:"BeanOutputConverter"}),': The "Shape It Like a POJO" Trick']}),"\n",(0,s.jsxs)(t.p,{children:["This converter tells AI to shape the response according to a ",(0,s.jsx)(t.strong,{children:"Java POJO"}),"\u2014no extra fluff! \ud83c\udfad"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'public class BeanOutputConverter<T> implements StructuredOutputConverter<T> {\n    @Override\n    public String getFormat() {\n        return """\n            Your response should be in JSON format.\n            Do not include explanations or markdown. Just an RFC8259-compliant JSON response.\n            JSON Schema to follow:\n            ```%s```\n        """;\n    }\n}\n'})}),"\n",(0,s.jsx)(t.h3,{id:"-example-top-10-cities-of-a-country",children:"\ud83c\udfaf Example: Top 10 Cities of a Country"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-java",children:'public record Pair(String countryName, List<String> cities) {}\n\n@GetMapping("/country-capital-service/bean")\npublic Pair getCapitalNamesInPojo(@RequestParam String countryName) {\n  BeanOutputConverter<Pair> converter = new BeanOutputConverter<>(Pair.class);\n  PromptTemplate pt = new PromptTemplate("For {countryName}, return the 10 most popular cities. {format}");\n  Prompt renderedPrompt = pt.create(Map.of("countryName", countryName, "format", converter.getFormat()));\n\n  ChatResponse response = chatClient.call(renderedPrompt);\n  return converter.parse(response.getResult().getOutput().getContent());\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["\u2705 AI now returns a ",(0,s.jsx)(t.strong,{children:"Pair object"})," with ",(0,s.jsx)(t.code,{children:"countryName"})," and ",(0,s.jsx)(t.code,{children:"List<String> cities"}),". \ud83c\udf89"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"-5-conclusion",children:"\ud83c\udfac 5. Conclusion"}),"\n",(0,s.jsxs)(t.p,{children:["Spring AI Structured Output Converters are the ",(0,s.jsx)(t.strong,{children:"boss level cheats"})," for making LLMs respond in a ",(0,s.jsx)(t.strong,{children:"structured and predictable"})," format. Whether you need ",(0,s.jsx)(t.strong,{children:"Maps, Lists, or Java Beans"}),", these converters keep everything in order. \ud83e\uddf9\ud83d\udca1"]}),"\n",(0,s.jsx)(t.p,{children:"So go ahead\u2014experiment, tweak, and see what kind of structured magic you can pull off! \ud83d\udd25"}),"\n",(0,s.jsx)(t.p,{children:"Happy Coding! \ud83e\uddd1\u200d\ud83d\udcbb\ud83c\udf89"})]})}function l(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},9666:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/spring_ai_logo-85ebfad6246caa6a26060f054d26ebc8.png"},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>o});var r=n(6540);const s={},a=r.createContext(s);function i(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);